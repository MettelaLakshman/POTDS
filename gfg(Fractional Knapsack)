class Solution
{
    public:
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        // Your code here
        priority_queue<pair<double,int>>q;
        double a,b,x;
        for(int i=0;i<n;i++)
        {
            a=arr[i].value;
            b=arr[i].weight;
            x=a/b;
            q.push({x,i});
        }
        double d;
        while(!q.empty())
        {
            pair<double,int> pfront=q.top();
            //cout<<pfront.first<<" ";
            //cout<<pfront.second<<" "<<endl;
            //cout<<d<<" ";
            if(W>=arr[pfront.second].weight)
            {
                d+=arr[pfront.second].value;
                W-=arr[pfront.second].weight;
                q.pop();
            }
            else
            {
                d+=pfront.first*W;
                break;
                q.pop();
            }
        }
        return d;
    }
        
};
